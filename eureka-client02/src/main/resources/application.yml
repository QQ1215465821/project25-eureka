
spring:
  application:
    name: eureka-client02
  boot:
    admin:
      client:
        url: http://127.0.0.1:8001
  cloud:
server:
  port: 9001
  compression:
    enabled: true
  tomcat:
    threads:
      max: 200
    max-connections: 8192
    accept-count: 100

eureka:
  instance:
    hostname: host04
    prefer-ip-address: false
    instance-id: ${eureka.instance.hostname}:${server.port}
  client:
    registry-fetch-interval-seconds: 1 #指示从eureka *服务器获取注册表信息的频率（以秒为单位）
    register-with-eureka: false
    fetch-registry: true
    service-url:
      defaultZone: http://eureka01:7001/eureka/,http://eureka02:7002/eureka/,http://eureka03:7003/eureka/
feign:
  compression:
    request:
      enabled: true
    response:
      enabled: true
      useGzipDecoder: true
#  client:
#    config:
#      default:
#        connect-timeout: 10000
#        read-timeout: 10000
#        requestInterceptors:
#          - org.springframework.cloud.openfeign.encoding.FeignAcceptGzipEncodingInterceptor
  hystrix:
    enabled: true
  httpclient:
    enabled: true # 新版本的ribbon自动启动的HTTPClient

hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          enabled: true #如果enabled设置为false，则请求超时交给ribbon控制,为true,则超时作为熔断根据
        isolation:
          strategy: SEMAPHORE # 配置隔离策略获取request
          thread:
            timeoutInMilliseconds: 600000 #断路器超时时间，默认1000ms

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
    shutdown:
      enabled: true

ribbon:
  ServerListRefreshInterval: 1 #默认30s,单位毫秒
#  OkToRetryOnAllOperations: false #对所有操作请求都进行重试,默认false
  ReadTimeout: 5000    #负载均衡超时时间，默认值5000,httpClient默认值1000，新版本的ribbon自动启动的HTTPClient
  ConnectTimeout: 1000 #ribbon请求连接的超时时间，默认值2000,httpClient默认值1000
#  MaxAutoRetries: 0     #对当前实例的重试次数，默认0
#  MaxAutoRetriesNextServer: 1 #对切换实例的重试次数，默认1 备注：ribbonTimeout = (ribbonReadTimeout + ribbonConnectTimeout) * (maxAutoRetries + 1) * (maxAutoRetriesNextServer + 1);